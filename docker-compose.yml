version: '3'
services:
  redis:
    image: redis:4.0.14-alpine
    ports:
      - $REDIS_PORT:$REDIS_PORT
    volumes:
      - .docker/redis/data:/data
    restart: unless-stopped

  app:
    build: angular-app/
    container_name: 'app'
    environment:
      - TZ='Asia/Tokyo'
      - REDIS_PORT=${REDIS_PORT}
      - ENV_HOST=${ENV_HOST}
      - APP_PORT=${APP_PORT}
      - SYNC_PORT=${SYNC_PORT}
    ports:
      - 4200:4200
    command: 'ng serve --host 0.0.0.0 --disableHostCheck'
    links:
      - sync
    networks:
      - realtime-ws-network

  nginx:
    container_name: nginx
    build: nginx/
    ports:
      - $APP_PORT:80
      - '443:443'
    links:
      - app
    networks:
      - realtime-ws-network

  module:
    build: module-server/
    container_name: 'module'
    ports:
      - $MODULE_PORT:$MODULE_PORT
    depends_on:
      - redis
    environment:
      - ENV_HOST=${ENV_HOST}
      - MODULE_PORT=${MODULE_PORT}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - realtime-ws-network

  sync:
    build: realtime-server/
    container_name: 'sync'
    ports:
      - $SYNC_PORT:$SYNC_PORT
    links:
      - module
    depends_on:
      - redis
    environment:
      - ENV_HOST=${ENV_HOST}
      - SYNC_PORT=${SYNC_PORT}
      - MODULE_PORT=${MODULE_PORT}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - realtime-ws-network

networks:
  realtime-ws-network:
